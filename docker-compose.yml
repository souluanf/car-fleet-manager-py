services:

  car-fleet-manager.mysql:
    container_name: car-fleet-manager.mysql
    hostname: car-fleet-manager.mysql
    image: mysql:8.1
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:3306"
    networks:
      - car-fleet-manager-network
    volumes:
      - car-fleet-manager-mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DATABASE_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
  
  car-fleet-manager.backend:
    container_name: car-fleet-manager.backend
    hostname: car-fleet-manager.backend
    build:
      context: backend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    networks:
      - car-fleet-manager-network
    depends_on:
      car-fleet-manager.mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f $${API_BASE_URL}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  car-fleet-manager.frontend:
    container_name: car-fleet-manager.frontend
    hostname: car-fleet-manager.frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "3000:80"
    networks:
      - car-fleet-manager-network
    depends_on:
      car-fleet-manager.backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  car-fleet-manager-network:
    name: car-fleet-manager-network
    driver: bridge

volumes:
  car-fleet-manager-mysql-data:
    driver: local